---

# Default compose file for development

version: "3.6"
services:
  db:
    build:
      context: .
      dockerfile: ./docker/dev/postgresql/Dockerfile
    container_name: coursegenius_api_db
    restart: unless-stopped
    env_file:
      - ./config/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - main

  web: &web
    # Image name is changed in production:
    image: "coursegenius-api:dev"
    build:
      context: .
      dockerfile: ./docker/dev/django/Dockerfile
      args:
        DJANGO_ENV: development
    volumes:
      - django-static:/var/www/django/static
      - django-media:/var/www/django/media  # serving django's media
      - django-locale:/code/locale  # since in dev it is app's folder
    depends_on:
      - db
    networks:
      - main
    env_file: ./config/.env
    command: /start_dev.sh
    expose:
      - 8000
    healthcheck:
      # We use `$$` here because:
      # one `$` goes to shell,
      # one `$` goes to `docker-compose.yml` escaping
      test: |
        /usr/bin/test $$(
          /usr/bin/curl --fail http://localhost:8000/health/?format=json
          --write-out "%{http_code}" --silent --output /dev/null
        ) -eq 200
      interval: 200s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:6.0.5
    hostname: redis
    volumes:
      - redis-data:/data
    env_file: ./config/.env
    networks:
      - main

  redis-commander:
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOST=redis
    depends_on:
      - "redis"
    networks:
      - main


  # RabbitMQ
  rabbit:
    hostname: rabbit
    image: rabbitmq:3.8-management
    env_file: ./config/.env
    networks:
      - main

  asgiserver:
    <<: *web
    command: /start_asgi.sh
    volumes:
      - .:/code

  celery:
    <<: *web
    command: /start_celery.sh
    volumes:
      - .:/code

  beat:
    <<: *web
    build:
      context: .
      dockerfile: ./docker/dev/django/Dockerfile
      args:
        DJANGO_ENV: development
    command: /start_beat.sh
    volumes:
      - .:/code
    ports: []


  flower:
    image: mher/flower
    container_name: coursegenius_flower
    command: celery flower --persistent=True
    env_file: ./config/.env
    depends_on:
      - redis
      - rabbit
      - web
      - celery
      - beat
    volumes:
      - flower_data:/data
    networks:
      - main

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin:/root/.pgadmin
    depends_on:
      - db
    networks:
      - main
    restart: unless-stopped

networks:
  main:

volumes:
  pgdata:
  django-static:
  django-media:
  django-locale:
  redis-data:
  pgadmin:
  flower_data:
